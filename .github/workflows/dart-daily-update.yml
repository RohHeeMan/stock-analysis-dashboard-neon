name: Daily Financials Update Workflow

on:
  schedule:
    # UTC 15:10 → KST 다음날 00:10
    - cron: '10 15 * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: [self-hosted, Windows, X64]

    steps:
      - uses: actions/checkout@v3

      - name: Bypass PowerShell Execution Policy
        shell: powershell
        run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

      - name: Set UTF-8 encoding for console (cmd)
        shell: cmd
        run: chcp 65001

      - name: Set PYTHONIOENCODING=utf-8 for all steps
        shell: powershell
        run: echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV

      - name: Check Python version
        run: python --version

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run data collector (재무제표 수집)
        id: run-main
        shell: powershell
        continue-on-error: true
        env:
          DART_API_KEY:   ${{ secrets.DART_API_KEY }}
          DATABASE_URL:   ${{ secrets.DATABASE_URL }}
        run: |
          # 1) 세션 인코딩과 에러 동작 조정
          chcp.com 65001
          [Console]::InputEncoding  = [System.Text.Encoding]::UTF8
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $ErrorActionPreference = 'Continue'

          # 2) 파이썬 실행 → UTF-8 로그 저장
          python main.py 2>&1 |
            Out-File -FilePath output.log -Encoding utf8

          # 3) 무조건 성공(0)으로 종료
          exit 0

      - name: Check if DART API stopped due to limit
        id: check19000
        shell: powershell
        run: |
          # PowerShell 인코딩 재설정
          chcp.com 65001
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8

          # output.log가 있으면 패턴 매칭
          if (Test-Path output.log) {
            if (Select-String -Path output.log -Pattern 'DART API 일일 호출 한도\(19000\)') {
              Add-Content -Path $env:GITHUB_OUTPUT -Value 'stopped_reason=19000'
            }
          }

      - name: Send notification email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username:    ${{ secrets.GMAIL_USER }}
          password:    ${{ secrets.GMAIL_APP_PASSWORD }}
          from:        ${{ secrets.GMAIL_USER }}
          to:          hmroh7363@gmail.com
          subject: >
            ${{ steps.check19000.outputs.stopped_reason == '19000'
                && '⛔ DART 호출 제한으로 중단됨'
                || job.status == 'failure'
                && '❌ 재무정보 업데이트 실패'
                || '✅ 재무정보 업데이트 완료' }}
          body: >
            ${{ steps.check19000.outputs.stopped_reason == '19000'
                && 'DART API 호출 횟수(19000)에 도달하여 수집을 중단했습니다.'
                || job.status == 'failure'
                && '예기치 못한 오류로 재무정보 수집이 실패했습니다.'
                || '정상적으로 재무정보 수집 및 DB 업로드가 완료되었습니다.' }}
