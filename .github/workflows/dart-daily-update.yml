name: Daily Financials Update Workflow

on:
  schedule:
    # UTC 15:10 → KST 다음날 00:10
    - cron: '10 15 * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: [self-hosted, Windows, X64]

    steps:
      - uses: actions/checkout@v3

      - name: Bypass PowerShell Execution Policy
        shell: powershell
        run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

      - name: Set PYTHONIOENCODING=utf-8 for all steps
        shell: powershell
        run: echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV

      - name: Check Python version
        run: python --version

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run data collector (재무제표 수집)
        id: run-main
        shell: powershell
        continue-on-error: true        # 스텝 실패가 워크플로 전체로 파급되지 않도록
        env:
          DART_API_KEY:   ${{ secrets.DART_API_KEY }}
          DATABASE_URL:   ${{ secrets.DATABASE_URL }}
        run: |
          # 이 줄을 맨 위에!
          $ErrorActionPreference = 'Continue'
      
          # python 실행 결과를 모두 캡처
          $output = python main.py 2>&1
          Write-Host $output
      
          # exit 코드가 0이 아니면
          if ($LASTEXITCODE -ne 0) {
            # 19000 한도 초과 메시지면 실패가 아닌 것으로 처리
            if ($output -match 'DART API 일일 호출 한도\(19000\)') {
              echo "stopped_reason=19000" >> $env:GITHUB_OUTPUT
              exit 0
            }
            # 그 외 에러는 원래 코드로 실패 처리
            exit $LASTEXITCODE
          }
          
      - name: Send notification email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.GMAIL_USER }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          from:     ${{ secrets.GMAIL_USER }}
          to:       hmroh7363@gmail.com
          subject: >
            ${{ steps.run-main.outputs.stopped_reason == '19000'
                && '⛔ DART 호출 제한으로 중단됨'
                || job.status == 'failure'
                && '❌ 재무정보 업데이트 실패'
                || '✅ 재무정보 업데이트 완료' }}
          body: >
            ${{ steps.run-main.outputs.stopped_reason == '19000'
                && 'DART API 호출 횟수(19000)에 도달하여 수집을 중단했습니다.'
                || job.status == 'failure'
                && '예기치 못한 오류로 재무정보 수집이 실패했습니다.'
                || '정상적으로 재무정보 수집 및 DB 업로드가 완료되었습니다.' }}
